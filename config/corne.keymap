/*
 * Custom Corne Keyboard ZMK firmware
 * Shawn Tolley
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

&sk { /delete-property/ ignore-modifiers; };

/ {
  behaviors {
    hml: homewrow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
    };

    hmr: homewrow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
    };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base0 {
      bindings = <
        &lt 6 ESC        &kp Q         &kp W        &kp E         &kp R        &kp T          &kp Y            &kp U        &kp I         &kp O        &kp P            &lt 7 ENTER
        &mt LGUI BSLH    &hml LSHFT A  &hml LALT S  &hml LCTRL D  &hml LCMD F  &kp G          &kp H            &hmr RCMD J  &hmr RCTRL K  &hmr RALT L  &hmr RSHFT SEMI  &mt RGUI APOS
        &mt LCTRL MINUS  &kp Z         &kp X        &kp C         &kp V        &kp B          &kp N            &kp M        &kp COMMA     &kp DOT      &kp FSLH         &mt RCTRL EQUAL
                                                    &kp LALT      &kt LSHIFT   &lt 1 SPACE    &lt 2 BACKSPACE  &kp RSHIFT   &kp RALT
      >;
    };

    left1 {
      bindings = <
        &kp TAB          &kp GRAVE     &kp N7        &kp N8       &kp N9       &kp N0         &trans           &trans       &trans        &trans       &trans           &trans
        &lt 2 BACKSLASH  &kp TILDE     &kp N4        &kp N5       &kp N6       &kp PLUS       &trans           &trans       &trans        &trans       &trans           &trans
        &trans           &kp EQUAL     &kp N1        &kp N2       &kp N3       &kp MINUS      &trans           &trans       &trans        &trans       &trans           &trans       
                                                     &trans       &trans       &trans         &trans           &trans       &trans
      >;

    };

    left2 {
      bindings = <
        &trans           &trans        &kp LT        &kp LBRC     &kp LBKT     &kp LPAR       &trans          &trans       &trans       &trans        &trans           &trans
        &trans           &trans        &kp GT        &kp RBRC     &kp RBKT     &kp RPAR       &trans          &trans       &trans       &trans        &trans           &trans
        &trans           &trans        &kp BACKSLASH &kp PIPE     &TILDE       &kp GRAVE      &trans          &trans       &trans       &trans        &trans           &trans
                                                     &trans       &trans       &trans         &trans          &trans       &trans
      >;
    };

    right3 {
      bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans    &kp RS(RC(C))  &kp PAGE_DOWN  &kp PAGE_UP  &kp RS(RC(X))  &kp RS(RC(V))  &kp TAB
        &trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT      &kp RSHIFT     &kt RGUI
        &trans  &trans  &trans  &trans  &trans  &trans    &kp DELETE     &kp HOME       &kp END      &kp BACKSPACE  &kp RALT       &kp RCTRL
                                &trans  &trans  &trans    &trans         &trans         &trans
      >;
    };

    right4 {
      bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans    &kp F9  &kp F10 &kp F11 &kp F12 &trans   &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &kp F5  &kp F6  &kp F7  &kp F8  &trans   &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &kp F1  &kp F2  &kp F3  &kp F4  &trans   &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };

    both {
      bindings = <
        &ext_power EP_TOG  &trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR       &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans                                   &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans  &trans  &trans                       &trans  &trans  &trans
      >;
    };

    num_left6 {
      bindings = <
        &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };

    num_right7 {
      bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };
  };
};

