/*
 * Custom Corne Keyboard ZMK firmware
 * Shawn Tolley
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

// &sk { /delete-property/ ignore-modifiers; };

/ {
//  behaviors {
//    hml: homewrow_mods_left {
//      compatible = "zmk,behavior-hold-tap";
//      #binding-cells = <2>;
//      bindings = <&kp>, <&kp>;
//
//      tapping-term-ms = <200>;
//      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
//    };
//
//    hmr: homewrow_mods_right {
//      compatible = "zmk,behavior-hold-tap";
//      #binding-cells = <2>;
//      bindings = <&kp>, <&kp>;
//
//      tapping-term-ms = <200>;
//      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
//    };
//
  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 3>;
      then-layer = <5>;
    };

  };
//

  keymap {
    compatible = "zmk,keymap";

    base0 {
      bindings = <
        &lt 6 ESC        &kp Q         &kp W        &kp E         &kp R        &kp T          &kp Y       &kp U       &kp I      &kp O    &kp P     &lt 6 RET
        &mt LGUI BSLH    &kp A         &kp S        &kp D         &kp F        &kp G          &kp H       &kp J       &kp K      &kp L    &kp SEMI  &mt RGUI SQT
        &mt LCTRL MINUS  &kp Z         &kp X        &kp C         &kp V        &kp B          &kp N       &kp M       &kp COMMA  &kp DOT  &kp FSLH  &mt RCTRL EQUAL
                                                    &kp LALT      &kp LSHFT    &lt 1 SPACE    &lt 3 BSPC  &kp RSHFT   &kp RALT
      >;
    };

    left1 {
      bindings = <
        &kp TAB     &kp N1  &kp N2    &kp N3    &kp N4    &kp N5                   &kp N6    &kp N7  &kp N8  &kp N9  &kp N0  &kp TAB
        &lt 2 PIPE  &kp LT  &kp LBRC  &kp LBKT  &kp LPAR  &kp GRAVE                &trans    &trans  &trans  &trans  &trans  &trans
        &mt LCTRL UNDERSCORE  &kp GT  &kp RBRC  &kp RBKT  &kp RPAR  &kp TILDE      &trans    &trans  &trans  &trans  &trans  &mt RCTRL PLUS
                                                &trans    &trans    &trans         &kp SPACE &trans  &trans
      >;

    };

    left2 {
      bindings = <
        &trans  &trans  &kp N7  &kp N8   &kp N9  &kp N0        &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &kp N4  &kp N5   &kp N6  &kp GRAVE     &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &kp N1  &kp N2   &kp N3  &kp TILDE     &trans  &trans  &trans  &trans  &trans  &trans
                                &trans   &trans  &trans        &trans  &trans  &trans
      >;
    };

    right3 {
      bindings = <
        &kp LS(TAB)  &trans  &trans  &trans  &trans  &trans    &kp RS(RC(C))  &kp PAGE_DOWN  &kp PAGE_UP  &kp RS(RC(X))  &kp RS(RC(V))  &kp TAB
        &trans  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LGUI  &trans    &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT      &kp RSHIFT     &lt 4 SQT
        &trans  &trans  &trans  &trans  &trans  &trans    &kp DELETE     &kp HOME       &kp END      &kp BACKSPACE  &kp RALT       &kp RCTRL
                                &trans  &trans  &kp RET   &trans         &trans         &trans
	>;
    };

    right4 {
      bindings = <
	&trans  &trans  &trans  &trans  &trans  &trans        &kp GRAVE  &kp N7  &kp N8   &kp N9  &trans  &trans
	&trans  &trans  &trans  &trans  &trans  &trans        &kp TILDE  &kp N4  &kp N5   &kp N6  &trans  &trans
	&trans  &trans  &trans  &trans  &trans  &trans        &kp N0  &kp N1  &kp N2   &kp N3  &trans  &trans
	                        &trans  &trans  &trans        &trans     &trans  &trans
      >;
    };

    both5 {
      bindings = <
        &trans  &kp EXCL &kp AT  &kp POUND  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &trans
        &trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp PCSRN  &trans
        &trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };

    function6 {
      bindings = <
        &trans  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5        &kp F6      &kp F7   &kp F8  &kp F9  &kp F10  &trans
        &trans  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans        &bt BT_CLR  &trans   &trans  &trans  &ext_power EP_TOG &trans
        &trans  &trans       &trans       &trans       &trans       &trans        &trans      &trans   &trans  &trans  &trans  &trans
                                          &trans       &trans       &trans        &trans      &trans   &trans
      >;
    };

  };
};

